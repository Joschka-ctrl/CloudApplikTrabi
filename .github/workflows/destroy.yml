name: destroy-Cluster
on:
  push:
    tags:
      - '5.*' 
env:
    PROJECT_ID: trabantparking-stage
    GKE_CLUSTER: metaa-8uurq
    GKE_REGION: europe-west1-b
    TF_PLAN_BUCKET: trabantparking-stage-terraform-plans
    # TF_PLAN_FILE: terraform.tfstate
    DNS_ZONE_NAME: trabant


jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Google Cloud SDK
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_STAGE }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.7"

    - name: Initialize Terraform
      run: |
        terraform init -reconfigure
      working-directory: cloud/terraform

    - name: Check if Cluster Exists
      id: check_cluster
      run: |
        if gcloud container clusters describe ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }}; then
            echo "CLUSTER_EXISTS=true" >> $GITHUB_ENV
        else
            echo "CLUSTER_EXISTS=false" >> $GITHUB_ENV
        fi
    - name: Import Existing Cluster
      if: env.CLUSTER_EXISTS == 'true'
      run: |
        echo ${{ env.PROJECT_ID }}
        terraform import google_container_cluster.gke projects/${{ env.PROJECT_ID }}/locations/${{ env.GKE_REGION }}/clusters/${{ env.GKE_CLUSTER }}
      working-directory: cloud/terraform
  
    - name: Cluster Name
      run: |
        echo ${{ env.GKE_CLUSTER }}

    - name: Import Bucket
      run: |
        terraform import google_storage_bucket.default trabantparking-stage-terraform-plans
      working-directory: cloud/terraform  


    - name: Import Firestore Database
      run: |
        terraform import google_firestore_database.firestore projects/${{ env.PROJECT_ID }}/databases/${{ env.GKE_CLUSTER }}
      working-directory: cloud/terraform


    - name: Terraform Plan
      run: |
        terraform plan -var="cluster_name=${{ env.GKE_CLUSTER }}" -out=tfplan
        terraform show -json tfplan > plan.json
        gcloud storage cp tfplan gs://${{ env.TF_PLAN_BUCKET }}/${{ env.GKE_CLUSTER }}.tfstate
      working-directory: cloud/terraform


    - name: Terraform Apply
      run: |
          if [ -f "tfplan" ]; then
            terraform apply tfplan
          else
            terraform apply -auto-approve
          fi
      working-directory: cloud/terraform

    - name: Destroy Terraform Resources
      if: ${{ env.CLUSTER_EXISTS == 'true' }}
      run: |
        terraform init -reconfigure  
        terraform destroy -auto-approve -var="cluster_name=${{ env.GKE_CLUSTER }}"     
      working-directory: cloud/terraform

    # - name: Delete Terraform State from Bucket
    #   run: |
    #     gsutil rm gs://${{ env.TF_PLAN_BUCKET }}/${{ env.TF_PLAN_FILE }}

    - name: Delete DNS Record
      if: ${{ env.CLUSTER_EXISTS == 'true' }}
      run: |
        if gcloud dns record-sets list --zone=${{ env.DNS_ZONE_NAME }} | grep -q ${{ env.GKE_CLUSTER }}.trabantparking.ninja; then
        echo "DNS record found. Deleting..."
        gcloud dns record-sets delete ${{ env.GKE_CLUSTER }}.trabantparking.ninja \
            --type=A \
            --zone=${{ env.DNS_ZONE_NAME }}
        else
        echo "DNS record not found. Skipping deletion."
        fi

    - name: Delete GKE Cluster (Fallback)
      if: ${{ env.CLUSTER_EXISTS == 'true' }}
      run: |
        gcloud container clusters delete ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }} --quiet
